{
  "permissions": {
    "allow": [
      "Bash(cargo clippy:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(cargo build:*)",
      "Bash(timeout 60 cargo build)",
      "Bash(cargo:*)",
      "Bash(timeout 30 cargo build 2 >& 1)",
      "Bash(rg:*)",
      "Bash(make migrate:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose down:*)",
      "Bash(docker-compose run:*)",
      "Bash(docker-compose build:*)",
      "Bash(docker-compose logs:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(RUST_BACKTRACE=1 cargo test test_user_signup_success -- --nocapture)",
      "Bash(sed:*)",
      "Bash(find:*)",
      "Bash(RUST_BACKTRACE=1 cargo test test_delete_account_wrong_confirmation -- --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo test integration::auth::account_management_tests::test_user_can_login_with_new_password -- --nocapture)",
      "mcp__ide__getDiagnostics",
      "Bash(RUST_LOG=info cargo test integration::roles::permission_tests::test_admin_can_list_all_tasks -- --nocapture 2 >& 1)",
      "Bash(true)",
      "Bash(RUST_BACKTRACE=1 cargo test integration::tasks::filter_tests::test_filter_tasks_invalid_status -- --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo test integration::tasks::batch_tests::test_batch_operations_with_invalid_data -- --nocapture)",
      "Bash(RUST_LOG=debug cargo test test_bulk_user_operation_admin -- --nocapture 2 >& 1)",
      "Bash(RUST_BACKTRACE=1 cargo test team_crud_tests::test_create_team_with_authentication)",
      "Bash(RUST_BACKTRACE=1 cargo test integration::team::team_member_tests::test_invite_team_member_by_email --package task-backend)",
      "Bash(RUST_BACKTRACE=1 cargo test --test main integration::auth::account_management_tests::test_get_current_user_success -- --nocapture)",
      "Bash(make:*)",
      "Bash(RUST_BACKTRACE=full EMAIL_DEVELOPMENT_MODE=false make run 2 >& 1)",
      "Bash(EMAIL_DEVELOPMENT_MODE=true make run 2 >& 1)",
      "Bash(nslookup:*)",
      "Bash(rm:*)",
      "Bash(RUSTFLAGS=\"-W dead_code\" cargo check --all-targets)",
      "Bash(git checkout:*)",
      "Bash(timeout 5 cargo run)"
    ],
    "deny": [
      "Bash(docker:*)"
    ]
  }
}